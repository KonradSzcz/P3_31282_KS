#include <thread>
#include <cstdio>
#include <windows.h>
#include <atomic>
//#include <mutex>

unsigned long long counter = 0;
std::atomic_uint64_t couter = 0;
//std::atomic<unsigned long long> sum2(0);

void increment() {
	for (;;) {
		//counter_mutex.lock();
		counter++;
		//counter_mutex.unlock();
		Sleep(200);
	}
}

void parity() {
	for (;;) {
		//counter_mutex.lock();        
		if (counter % 2) {
			printf("%u jest nieparzyste\r\n", counter);
		}
		else {
			printf("%u jest parzyste\r\n", counter);
		}
		//counter_mutex.unlock();
		Sleep(200);
	}
}

int main() {
	std::thread inc(increment);
	std::thread par(parity);

	inc.join();
	par.join();

	printf("Done\r\n");

	return 0;
}